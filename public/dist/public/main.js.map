{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/reviews/reviews.component.css","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/pets' },\n  { path: 'pets', component: DashboardComponent},\n  { path: 'pets/new', component: NewComponent},\n  { path: 'pets/:id', component: ReviewsComponent},\n  { path: 'pets/edit/:id', component: EditComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container jumbotron\\\">\\n  <div style=\\\"text-align:left\\\">\\n    <h1>\\n      Pet Shelter!\\n    </h1>\\n    <router-outlet></router-outlet>\\n    \\n  </div>\\n</div>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  newPet: any;\n  editPet: any;\n  pets;\n  pet;\n  id: String;\n\n  constructor(private _httpService: HttpService) {}\n  ngOnInit() {\n    this.newPet = { name: \"\", type: \"\", description: \"\"}\n    this.editPet = { _id: \"\", name: \"\", type: \"\", description: \"\"}\n    this.getPetsFromService();\n    // this.getTaskFromService();\n  }\n  getPetsFromService() {\n    let observable = this._httpService.getPets()\n    observable.subscribe(data =>  {\n      console.log(\"Got our pets!\", data)\n      this.pets = data;\n      console.log(this.pets)\n\n    });\n  }\n  getPetFromService(id) {\n    let observable = this._httpService.getPet(id)\n    observable.subscribe(data => {\n      console.log(\"Got the pet!\", data)\n      this.pet = data;\n    });\n  }\n  \n  \n  \n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    EditComponent,\n    ReviewsComponent,\n    DashboardComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>These pets are looking for a home!</p>\\n<a routerLink='/pets/new' routerLinkActive='active' class='btn btn-primary'>Add a pet to the shelter</a>\\n<table class='table table-striped' style=\\\"margin-top: 15px;\\\">\\n  <thead class='thead-dark' >\\n    <tr>\\n      <th scope='col'>Name</th>\\n      <th scope='col'>Type</th>\\n      <th scope='col'>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let pet of pets\\\">\\n    <td>{{ pet.name }}</td>\\n    <td>{{ pet.type }}</td>\\n    <!-- <td *ngIf='restaurant.average'>{{ restaurant.average }} stars</td>\\n    <td *ngIf='!restaurant.average'>No reviews!</td> -->\\n    <td>\\n      <a class='btn btn-primary btn-sm' [routerLink]=\\\"['/pets', pet._id]\\\">Details</a>\\n      <button style='margin-left: 15px;' class='btn btn-success btn-sm' (click)=\\\"showEdit(pet._id)\\\">Edit</button>\\n      \\n      <!-- <button style='margin-left: 15px;' class='btn btn-warning btn-sm' (click)=\\\"deleteRestaurantFromService(restaurant._id)\\\">Delete</button> -->\\n    </td>\\n  </tbody>\\n</table>\\n<div>\\n  <app-edit *ngIf=\\\"parentId\\\" [childId]=\\\"parentId\\\" (closeForm)=\\\"dataFromChild($event)\\\"></app-edit>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  pets;\n  pet;\n  parentId: string;\n  // reviews: Array<object>;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    console.log(this.parentId);\n    this.getPetsFromService()\n  }\n  getPetsFromService() {\n    let observable = this._httpService.getPets()\n    observable.subscribe(data =>  {\n      console.log(\"Got our pets!\", data)\n      this.pets = data;\n      console.log(this.pets)\n\n    });\n  }\n  // getPetsFromService() {\n  //   let observable = this._httpService.getPets()\n  //   observable.subscribe(data => {\n  //     console.log(\"Got our pets!\", data)\n\n  //     for (var idx in data) {\n  //       let currPet = data[idx];\n  //       var sum = 0;\n  //       for (var rev of currPet['reviews']) {\n  //         sum += rev['stars'];\n  //       }\n  //       console.log(sum)\n  //       if (sum === 0) {\n  //         var avg = sum\n  //         data[idx]['average'] = avg;\n  //       } else {\n  //         avg = sum / currPet['reviews'].length\n  //         data[idx]['average'] = avg;\n  //       }\n        \n  //     }\n\n  //     this.pets = data;\n  //     console.log(this.pets)\n  //   });\n  // }\n  deletePetFromService(id) {\n    console.log('Click will delete', id)\n    let observable = this._httpService.deletePet(id);\n    observable.subscribe(data => {\n      this.getPetsFromService();\n    })\n  }\n  showEdit(idFromButton) {\n    this.parentId = idFromButton;\n    console.log(this.parentId);\n  }\n  dataFromChild(eventData) {\n    this.parentId = eventData;\n    this.getPetsFromService();\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container jumbotron\\\" style=\\\"text-align:left\\\">\\n  <h5>Edit this pet</h5>\\n  <form *ngIf='editPet._id' (submit)=\\\"onSubmitEditPet()\\\">\\n    <div class='form-group row'>\\n      Pet name:: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editPet.name'\\n        [(ngModel)]='editPet.name' />\\n    </div>\\n    <div class='form-group row'>\\n      Pet type: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editPet.type'\\n        [(ngModel)]='editPet.type' />\\n    </div>\\n    <div class='form-group row'>\\n      Description: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editPet.description'\\n        [(ngModel)]='editPet.description' />\\n    </div>\\n    <div class='container'>\\n      <p>Skills (optional)</p>\\n      <div class='form-group row'>\\n        Skill 1: <input style='margin-left: 10px;' type='text' name='editPet.skill1' [(ngModel)]='editPet.skill1' />\\n      </div>\\n      <div class='form-group row'>\\n        Skill 2: <input style='margin-left: 10px;' type='text' name='editPet.skill2' [(ngModel)]='editPet.skill2' />\\n      </div>\\n      <div class='form-group row'>\\n        Skill 3: <input style='margin-left: 10px;' type='text' name='editPet.skill3' [(ngModel)]='editPet.skill3' />\\n      </div>\\n    </div>\\n\\n    <div class='form-group row'>\\n      <input class='btn btn-primary' type='submit' value='Update' />\\n      <a (click)=\\\"tellParentToCloseForm()\\\" routerLinkActive='active' class='btn btn-warning'>Cancel</a>\\n    </div>\\n    <div *ngIf=\\\"errors.errors.name\\\">\\n      {{ errors.errors.name.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.type\\\">\\n      {{ errors.errors.type.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.description\\\">\\n      {{ errors.errors.description.message }}\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router, ChildActivationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  editPet: any;\n  pets;\n  pet;\n  id: String;\n  errors: Object;\n  @Output() closeForm = new EventEmitter();\n\n  @Input() childId: String;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.editPet = { _id: \"\", name: \"\", cuisine: \"\", description: \"\", skill1:\"\", skill2:\"\", skill3:\"\"}\n    this.getPetFromServiceById();\n\n    this.errors = {}\n    this.errors['errors'] = {}\n    console.log(this.childId);\n  }\n  getPetFromServiceById() {\n      let observable = this._httpService.getPet(this.childId)\n      observable.subscribe(data =>  {\n        console.log(\"Got our pet!\", data)\n        this.editPet = data;\n        console.log(this.editPet)\n\n      });\n  }\n  // onEditRestaurant(id, name, cuisine) {\n  //   this.editRestaurant._id = id;\n  //   this.editRestaurant.name = name;\n  //   this.editRestaurant.cuisine = cuisine;\n  // }\n  onSubmitEditPet() {\n    console.log(\"this will edit a pet\")\n    let observable = this._httpService.editPet(this.editPet._id, this.editPet);\n    observable.subscribe (data => {\n      console.log(data)\n      if (data['errors']) {\n        console.log(data['errors'])\n        this.errors = data['errors']\n      } else {\n        this._router.navigate(['/pets'])\n        this.closeForm.emit(null);\n      }\n    })\n  }\n  tellParentToCloseForm() {\n    this.closeForm.emit(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { \n  \n  }\n  getPets(){\n    // let tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data=> console.log('Got our tasks!', data))\n    return this._http.get('api/pets');\n  }\n  getPet(id){\n    // let tempObservable = this._http.get('/tasks/5be61addf7319843838a0560')\n    // tempObservable.subscribe(data=> console.log('Got one task!!!', data))\n    return this._http.get('api/pets/' + id)\n  }\n  addPet(newpet) {\n    return this._http.post('api/pets', newpet)\n  }\n  editPet(id, editpet) {\n    return this._http.put('api/pets/' + id, editpet)\n  }\n  deletePet(id) {\n    return this._http.delete('api/pets/' + id)\n  }\n  // addReview(id, newreview) {\n  //   return this._http.post('api/reviews/new/' + id, newreview)\n  // }\n}\n\n\n ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n    <h5>Know of a pet needing a home?</h5>\\n</div>\\n<form (submit)=\\\"onSubmitAddPet()\\\">\\n\\n    <div class='form-group row'>\\n        Pet name: <input style='margin-left: 10px;' type='text' name='newPet.name' [(ngModel)]='newPet.name' />\\n    </div>\\n    <div class='form-group row'>\\n        Pet type: <input style='margin-left: 10px;' type='text' name='newPet.type' [(ngModel)]='newPet.type' />\\n    </div>\\n    <div class='form-group row'>\\n        Description: <input style='margin-left: 10px;' type='text' name='newPet.description' [(ngModel)]='newPet.description' />\\n    </div>\\n    \\n    <div class='container'>\\n        <p>Skills (optional)</p>\\n        <div class='form-group row'>\\n            Skill 1: <input style='margin-left: 10px;' type='text' name='newPet.skill1' [(ngModel)]='newPet.skill1' />\\n        </div>\\n        <div class='form-group row'>\\n            Skill 2: <input style='margin-left: 10px;' type='text' name='newPet.skill2' [(ngModel)]='newPet.skill2' />\\n        </div>\\n        <div class='form-group row'>\\n            Skill 3: <input style='margin-left: 10px;' type='text' name='newPet.skill3' [(ngModel)]='newPet.skill3' />\\n        </div>\\n    </div>\\n    <div class='form-group row'>\\n        <input class='btn btn-primary' type='submit' value='Add pet' />\\n        <a routerLink='/pets' routerLinkActive='active' class='btn btn-secondary'>Cancel</a>\\n    </div>\\n    \\n\\n    <div *ngIf=\\\"errors.errors.name\\\">\\n        {{ errors.errors.name.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.type\\\">\\n        {{ errors.errors.type.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.description\\\">\\n        {{ errors.errors.description.message }}\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newPet: any;\n  id: String;\n  errors: object;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.newPet = { name: \"\", type: \"\", description: \"\", skill1:\"\", skill2:\"\", skill3:\"\"}\n    // this.errors = {\n    //   errors: {\n    //     name: {}\n    //   }\n    // }\n    this.errors = {}\n    this.errors['errors'] = {}\n    // this.errors['errors']['name'] = {}\n  }\n  onSubmitAddPet() {\n    let observable = this._httpService.addPet(this.newPet);\n    observable.subscribe (data => {\n      console.log('New pet added', data);\n      if (data['errors']) {\n        console.log(data['errors'])\n        if (data['errors']['code'] == 11000) {\n          this.errors = {\n            errors: {\n              name: {\n                message: \"Pet already exists\"\n              }\n            }\n          }\n        } else {\n          this.errors = data['errors']\n        }\n      } else {\n        this._router.navigate(['/pets'])\n      }\n    })\n    // this.newPet = { name: \"\", type: \"\", description: \"\"}\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jldmlld3MvcmV2aWV3cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container jumbotron\\\">\\n  <h5>Details about {{ pet.name }}</h5>\\n  <a style='text-decoration: underline' routerLink='/' routerLinkActive='active' class=''>Home</a>\\n  <ul style='list-style-type:none'>\\n    <div>\\n      <li>Pet type: {{ pet.name }}</li>\\n    </div>\\n    <div>\\n      <li>Type: {{ pet.type }}</li>\\n    </div>\\n    <div>\\n      <li>Description: {{ pet.description }}</li>\\n    </div>\\n    <div>\\n      <li>Skill 1: {{ pet.skill1 }}</li>\\n    </div>\\n    <div>\\n      <li>Skill 2: {{ pet.skill2 }}</li>\\n    </div>\\n    <div>\\n      <li>Skill 3: {{ pet.skill3 }}</li>\\n    </div>\\n\\n    <div>\\n      <li *ngIf='!count'>Likes: 0</li>\\n      <li *ngIf='count'>Likes: {{ count }}</li>\\n    </div>\\n  </ul>\\n\\n\\n\\n\\n  <button type='button' class='btn btn-primary btn-sm' [disabled] = 'count' (click)='likeThisPet()'>Like this pet!</button>\\n  <!-- <a [routerLink]=\\\"['/pets', pet._id]\\\" routerLinkActive='active' class='btn btn-primary btn-sm'>Like this pet</a> -->\\n  <!-- <a routerLink='/pets' routerLinkActive='active' class='btn btn-warning btn-sm'>Adopt this pet!</a> -->\\n  <button style='margin-left: 15px;' class='btn btn-warning btn-sm' (click)=\\\"deletePetFromService(pet._id)\\\">Adopt this pet!</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n  pet: object;\n  count: number = 0;\n  // reviews: Array<object>;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.pet = {};\n    this.getPetFromServiceById();\n  }\n\n  getPetFromServiceById() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n  \n      let observable = this._httpService.getPet(params['id'])\n      observable.subscribe(data =>  {\n        console.log(\"Got our restaurant!\", data)\n        this.pet = data;\n      \n        // this.pets = data['reviews'];\n        // this.reviews.sort(this.compare);\n        // console.log(this.reviews)\n        // var sum = 0;\n        // for (var rev of this.reviews) {\n        //   sum += rev['stars'];\n        // }\n        // console.log(sum);\n        // var avg = sum / this.reviews.length\n        // console.log(avg)\n      });\n    });\n  }\n\n  likeThisPet(count) {\n    this.count ++\n    var number = this.count\n    return number\n  }\n\n\n  \n  deletePetFromService(id) {\n    console.log('Click will delete', id)\n    let observable = this._httpService.deletePet(id);\n    observable.subscribe(data => {\n      this._router.navigate(['/pets'])\n    })\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}